<?php

namespace utils;

/**
 * Generated by PHPUnit_SkeletonGenerator on 2016-01-11 at 00:14:54.
 */
class StringTest extends \PHPUnit_Framework_TestCase {

    /**
     * @var String
     */
    protected $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp() {
        $this->object = new String;
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown() {
        
    }

    /**
     * Generated from @assert ("abcdef", "cd") == false.
     *
     * @covers String::startsWith
     */
    public function testStartsWith() {
        $this->assertFalse(
                String::startsWith("abcdef", "cd")
        );
    }

    /**
     * Generated from @assert ("abcdef", "ef") == false.
     *
     * @covers String::startsWith
     */
    public function testStartsWith2() {
        $this->assertFalse(
                String::startsWith("abcdef", "ef")
        );
    }

    /**
     * Generated from @assert ("abcdef", "") == true.
     *
     * @covers String::startsWith
     */
    public function testStartsWith3() {
        $this->assertTrue(
                String::startsWith("abcdef", "")
        );
    }

    /**
     * Generated from @assert ("", "abcdef") == false.
     *
     * @covers String::startsWith
     */
    public function testStartsWith4() {
        $this->assertFalse(
                String::startsWith("", "abcdef")
        );
    }

    /**
     * Generated from @assert ("abcdef", "ab") == false.
     *
     * @covers String::endsWith
     */
    public function testEndsWith() {
        $this->assertFalse(
                String::endsWith("abcdef", "ab")
        );
    }

    /**
     * Generated from @assert ("abcdef", "cd") == false.
     *
     * @covers String::endsWith
     */
    public function testEndsWith2() {
        $this->assertFalse(
                String::endsWith("abcdef", "cd")
        );
    }

    /**
     * Generated from @assert ("abcdef", "ef") == true.
     *
     * @covers String::endsWith
     */
    public function testEndsWith3() {
        $this->assertTrue(
                String::endsWith("abcdef", "ef")
        );
    }

    /**
     * Generated from @assert ("abcdef", "") == true.
     *
     * @covers String::endsWith
     */
    public function testEndsWith4() {
        $this->assertTrue(
                String::endsWith("abcdef", "")
        );
    }

    /**
     * Generated from @assert ("", "abcdef") == false.
     *
     * @covers String::endsWith
     */
    public function testEndsWith5() {
        $this->assertFalse(
                String::endsWith("", "abcdef")
        );
    }

}
